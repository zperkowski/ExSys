package com.zperkowski.exsys
import java.util.Arrays

rule "Init"
   when
     qa : QA(getQuestion() == "", getAnswerd() == "")
   then
    System.out.println("Rule\tInit\t\t\t" + qa.toString() + " " + qa.countObservers());
    qa.change(QA.q_hoay, Arrays.asList(QA.a_05, QA.a_612, QA.a_13));
    retract(qa)
end

rule "Q_hoay_answered_05"
    when
        qa : QA(getQuestion() == QA.q_hoay, getAnswerd() == QA.a_05)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dypwtbacp,
            Arrays.asList(
                    QA.a_y,
                    QA.a_niahjtp
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "Q_hoay_answered_612"
    when
        qa : QA(getQuestion() == QA.q_hoay, getAnswerd() == QA.a_612)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_ayptpialofpt,
            Arrays.asList(
                    QA.a_y,
                    QA.a_nijwtgpaqap
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "Q_hoay_answered_13"
    when
        qa : QA(getQuestion() == QA.q_hoay, getAnswerd() == QA.a_13)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhutlomaav,
            Arrays.asList(
                    QA.a_yihagac,
                    QA.a_nr
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dypwtbacp_answered_y"
    when
        qa : QA(getQuestion() == QA.q_dypwtbacp, getAnswerd() == QA.a_y)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Violin");
        qa.deleteObservers();
    end

rule "q_dypwtbacp_answered_niahjtp"
    when
        qa : QA(getQuestion() == QA.q_dypwtbacp, getAnswerd() == QA.a_niahjtp)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_ayptpialofpt,
            Arrays.asList(
                    QA.a_y,
                    QA.a_nijwtgpaqap
                    ),
                    qa.getObserver());
        insert(new_qa);
    end


rule "Q_ayptpialofpt_answered_y"
    when
        qa : QA(getQuestion() == QA.q_ayptpialofpt, getAnswerd() == QA.a_y)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Piano");
        qa.deleteObservers();
    end

rule "Q_ayptpialofpt_answered_nijwtgpaqap"
    when
        qa : QA(getQuestion() == QA.q_ayptpialofpt, getAnswerd() == QA.a_nijwtgpaqap)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dywtdyfm,
            Arrays.asList(
                    QA.a_wnij,
                    QA.a_ianab
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dywtdyfm_answered_wnij"
    when
        qa : QA(getQuestion() == QA.q_dywtdyfm, getAnswerd() == QA.a_wnij)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Rossenbar (?)");
        qa.deleteObservers();
    end

rule "q_dywtdyfm_answered_ianab"
    when
        qa : QA(getQuestion() == QA.q_dywtdyfm, getAnswerd() == QA.a_ianab)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhabh,
            Arrays.asList(
                    QA.a_iliac,
                    QA.a_tipor,
                    QA.a_iimcab
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhabh_answered_iliac"
    when
        qa : QA(getQuestion() == QA.q_dyhabh, getAnswerd() == QA.a_iliac)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Organs");
        qa.deleteObservers();
    end

rule "q_dyhabh_answered_tipor"
    when
        qa : QA(getQuestion() == QA.q_dyhabh, getAnswerd() == QA.a_tipor)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dywtpiao,
            Arrays.asList(
                    QA.a_tmptmn,
                    QA.a_mlislas,
                    QA.a_ofiib
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dywtpiao_answered_tmptmn"
    when
        qa : QA(getQuestion() == QA.q_dywtpiao, getAnswerd() == QA.a_tmptmn)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Piano");
        qa.deleteObservers();
    end

rule "q_dywtpiao_answered_mlislas"
    when
        qa : QA(getQuestion() == QA.q_dywtpiao, getAnswerd() == QA.a_mlislas)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyelhw,
            Arrays.asList(
                    QA.a_iaomos,
                    QA.a_ianawb
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhabh_answered_iimcab"
    when
        qa : QA(getQuestion() == QA.q_dyhabh, getAnswerd() == QA.a_iimcab)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhyn,
            Arrays.asList(
                    QA.a_wap,
                    QA.a_ntaqn
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "Q_dyhutlomaav_answered_yihagac"
    when
        qa : QA(getQuestion() == QA.q_dyhutlomaav, getAnswerd() == QA.a_yihagac)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Hurp");
        qa.deleteObservers();
    end

rule "Q_dyhutlomaav_answered_nr"
    when
        qa : QA(getQuestion() == QA.q_dyhutlomaav, getAnswerd() == QA.a_nr)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dycythsma,
            Arrays.asList(
                    QA.a_yiaa,
                    QA.a_nat,
                    QA.a_ihs
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhnaaulos_answered_nq"
    when
        qa : QA(getQuestion() == QA.q_dyhnaaulos, getAnswerd() == QA.a_nq)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Piano");
        qa.deleteObservers();
    end

rule "q_dyhnaaulos_answered_tsjlm"
    when
        qa : QA(getQuestion() == QA.q_dyhnaaulos, getAnswerd() == QA.a_tsjlm)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("French horn");
        qa.deleteObservers();
    end


rule "Q_dycythsma_answered_yiaa"
    when
        qa : QA(getQuestion() == QA.q_dycythsma, getAnswerd() == QA.a_yiaa)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhnaaulos,
            Arrays.asList(
                    QA.a_tsjlm,
                    QA.a_nq
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "Q_dycythsma_answered_ihs"
    when
        qa : QA(getQuestion() == QA.q_dycythsma, getAnswerd() == QA.a_ihs)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_fyaac,
            Arrays.asList(
                    QA.a_yrob,
                    QA.a_np
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "Q_dycythsma_answered_nat"
    when
        qa : QA(getQuestion() == QA.q_dycythsma, getAnswerd() == QA.a_nat)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Comb");
        qa.deleteObservers();
    end

rule "q_fyaac_answered_y"
    when
        qa : QA(getQuestion() == QA.q_fyaac, getAnswerd() == QA.a_y)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_aymmomm,
            Arrays.asList(
                    QA.a_m,
                    QA.a_mc
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_fyaac_answered_np"
    when
        qa : QA(getQuestion() == QA.q_fyaac, getAnswerd() == QA.a_np)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dywtbcoa,
            Arrays.asList(
                    QA.a_yiagbas,
                    QA.a_nriaatp
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dywtbcoa_answered_yiagbas"
    when
        qa : QA(getQuestion() == QA.q_dywtbcoa, getAnswerd() == QA.a_yiagbas)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Piano");
        qa.deleteObservers();
    end

rule "q_dywtbcoa_answered_nriaatp"
    when
        qa : QA(getQuestion() == QA.q_dywtbcoa, getAnswerd() == QA.a_nriaatp)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhabh,
            Arrays.asList(
                    QA.a_iliac,
                    QA.a_tipor,
                    QA.a_iimcab
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_aymmomm_answered_m"
    when
        qa : QA(getQuestion() == QA.q_aymmomm, getAnswerd() == QA.a_m)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Piano");
        qa.deleteObservers();
    end

rule "q_aymmomm_answered_mc"
    when
        qa : QA(getQuestion() == QA.q_aymmomm, getAnswerd() == QA.a_mc)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Acoustic guitar");
        qa.deleteObservers();
    end

rule "q_dyfabojots_answered_jinmiin"
    when
        qa : QA(getQuestion() == QA.q_dyfabojots, getAnswerd() == QA.a_jinmiin)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Tube");
        qa.deleteObservers();
    end

rule "q_dyfabojots_answered_stc"
    when
        qa : QA(getQuestion() == QA.q_dyfabojots, getAnswerd() == QA.a_stc)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Double bass");
        qa.deleteObservers();
    end

rule "q_dyhyn_answered_wap"
    when
        qa : QA(getQuestion() == QA.q_dyhyn, getAnswerd() == QA.a_wap)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhagsorat,
            Arrays.asList(
                    QA.a_iaahm,
                    QA.a_iioig
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhagsorat_answered_iaahm"
    when
        qa : QA(getQuestion() == QA.q_dyhagsorat, getAnswerd() == QA.a_iaahm)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Percussion");
        qa.deleteObservers();
    end

rule "q_dyhagsorat_answered_iioig"
    when
        qa : QA(getQuestion() == QA.q_dyhagsorat, getAnswerd() == QA.a_iioig)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Trumpet");
        qa.deleteObservers();
    end

rule "q_dyhyn_answered_ntaqn"
    when
        qa : QA(getQuestion() == QA.q_dyhyn, getAnswerd() == QA.a_ntaqn)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dylfm,
            Arrays.asList(
                    QA.a_ianah,
                    QA.a_iawfimh
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dylfm_answered_ianah"
    when
        qa : QA(getQuestion() == QA.q_dylfm, getAnswerd() == QA.a_ianah)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Digital piano");
        qa.deleteObservers();
    end

rule "q_dylfm_answered_iawfimh"
    when
        qa : QA(getQuestion() == QA.q_dylfm, getAnswerd() == QA.a_iawfimh)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Acoustic guitar");
        qa.deleteObservers();
    end

rule "q_dyelhw_answered_ianawb"
    when
        qa : QA(getQuestion() == QA.q_dyelhw, getAnswerd() == QA.a_ianawb)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyhaatsoc,
            Arrays.asList(
                    QA.a_mah,
                    QA.a_yipsd
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhaatsoc_answered_mah"
    when
        qa : QA(getQuestion() == QA.q_dyhaatsoc, getAnswerd() == QA.a_mah)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dywac,
            Arrays.asList(
                    QA.a_ilac,
                    QA.a_biogmarc,
                    QA.a_lits
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyhaatsoc_answered_yipsd"
    when
        qa : QA(getQuestion() == QA.q_dyhaatsoc, getAnswerd() == QA.a_yipsd)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dymbtbopj,
            Arrays.asList(
                    QA.a_ilagl,
                    QA.a_niats
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dyelhw_answered_iaomos"
    when
        qa : QA(getQuestion() == QA.q_dyelhw, getAnswerd() == QA.a_iaomos)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dyfabojots,
            Arrays.asList(
                    QA.a_jinmiin,
                    QA.a_stc
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dymbtbopj_answered_ilagl"
    when
        qa : QA(getQuestion() == QA.q_dymbtbopj, getAnswerd() == QA.a_ilagl)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Viola");
        qa.deleteObservers();
    end


rule "q_dymbtbopj_answered_niats"
    when
        qa : QA(getQuestion() == QA.q_dymbtbopj, getAnswerd() == QA.a_niats)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Cello");
        qa.deleteObservers();
    end

rule "q_dywac_answered_biogmarc"
    when
        qa : QA(getQuestion() == QA.q_dywac, getAnswerd() == QA.a_biogmarc)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Oboe");
        qa.deleteObservers();
    end

rule "q_dywac_answered_ilac"
    when
        qa : QA(getQuestion() == QA.q_dywac, getAnswerd() == QA.a_ilac)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Bassoon");
        qa.deleteObservers();
    end

rule "q_dywac_answered_lits"
    when
        qa : QA(getQuestion() == QA.q_dywac, getAnswerd() == QA.a_lits)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dymfar,
            Arrays.asList(
                    QA.a_tslwtmh,
                    QA.a_ilfmt
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dymfar_answered_tslwtmh"
    when
        qa : QA(getQuestion() == QA.q_dymfar, getAnswerd() == QA.a_tslwtmh)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_labosae,
            Arrays.asList(
                    QA.a_l,
                    QA.a_ep
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_dymfar_answered_ilfmt"
    when
        qa : QA(getQuestion() == QA.q_dymfar, getAnswerd() == QA.a_ilfmt)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.deleteObservers();
        QA new_qa = new QA(QA.q_dywtmia8cb,
            Arrays.asList(
                    QA.a_iigmos,
                    QA.a_dn
                    ),
                    qa.getObserver());
        insert(new_qa);
    end

rule "q_labosae_answered_l"
    when
        qa : QA(getQuestion() == QA.q_labosae, getAnswerd() == QA.a_l)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Trumpet");
        qa.deleteObservers();
    end

rule "q_labosae_answered_ep"
    when
        qa : QA(getQuestion() == QA.q_labosae, getAnswerd() == QA.a_ep)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Flute");
        qa.deleteObservers();
    end

rule "q_dywtsos_answered_sit"
    when
        qa : QA(getQuestion() == QA.q_dywtsos, getAnswerd() == QA.a_sit)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Lute");
        qa.deleteObservers();
    end

rule "q_dywtsos_answered_stand"
    when
        qa : QA(getQuestion() == QA.q_dywtsos, getAnswerd() == QA.a_stand)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Harpsichord");
        qa.deleteObservers();
    end

rule "q_dywtmia8cb_answered_iigmos"
    when
        qa : QA(getQuestion() == QA.q_dywtmia8cb, getAnswerd() == QA.a_iigmos)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Saxophone");
        qa.deleteObservers();
    end

rule "q_dywtmia8cb_answered_dn"
    when
        qa : QA(getQuestion() == QA.q_dywtmia8cb, getAnswerd() == QA.a_dn)
    then
        System.out.println("Rule: " + qa.toString() + " " + qa.getQuestion() + " answer:\t" + qa.getAnswerd());
        qa.sendInfo("Clarinet");
        qa.deleteObservers();
    end
